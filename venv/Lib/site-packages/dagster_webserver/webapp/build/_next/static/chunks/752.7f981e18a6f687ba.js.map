{"version":3,"file":"static/chunks/752.7f981e18a6f687ba.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/hooks/useSelectionReducer.ts","webpack://_N_E/../ui-core/src/runs/CreatedByTag.tsx","webpack://_N_E/../ui-components/src/components/ProductTour.tsx","webpack://_N_E/../ui-core/src/runs/ReexecutionDialog.tsx","webpack://_N_E/../ui-core/src/runs/RunActionsMenu.tsx","webpack://_N_E/../ui-core/src/runs/useTagPinning.tsx","webpack://_N_E/../ui-core/src/runs/RunRow.tsx","webpack://_N_E/../ui-core/src/runs/ShowAndHideRunTags.mp4","webpack://_N_E/../ui-core/src/runs/RunTable.tsx","webpack://_N_E/../ui-core/src/runs/useCursorPaginatedQuery.tsx","webpack://_N_E/../ui-core/src/ui/MenuLink.tsx","webpack://_N_E/../ui-core/src/ui/StickyTableContainer.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\n\ntype State = {\n  checkedIds: Set<string>;\n  lastCheckedId: string | null;\n};\n\ntype Action =\n  | {type: 'toggle-one'; payload: {checked: boolean; id: string}}\n  | {\n      type: 'toggle-slice';\n      payload: {checked: boolean; id: string; allIds: string[]};\n    }\n  | {type: 'toggle-all'; payload: {checked: boolean; allIds: string[]}};\n\nconst reducer = (state: State, action: Action): State => {\n  const copy = new Set(Array.from(state.checkedIds));\n  switch (action.type) {\n    case 'toggle-one': {\n      const {checked, id} = action.payload;\n      checked ? copy.add(id) : copy.delete(id);\n      return {lastCheckedId: id, checkedIds: copy};\n    }\n\n    case 'toggle-slice': {\n      const {checked, id, allIds} = action.payload;\n      const {lastCheckedId} = state;\n\n      const indexOfLast = lastCheckedId ? allIds.indexOf(lastCheckedId) : -1;\n      const indexOfChecked = allIds.indexOf(id);\n      if (indexOfLast === -1 || indexOfChecked === -1) {\n        return state;\n      }\n\n      const [start, end] = [indexOfLast, indexOfChecked].sort();\n      allIds.slice(start, end! + 1).forEach((id) => {\n        checked ? copy.add(id) : copy.delete(id);\n      });\n\n      return {\n        lastCheckedId: id,\n        checkedIds: copy,\n      };\n    }\n\n    case 'toggle-all': {\n      const {checked, allIds} = action.payload;\n      return {\n        lastCheckedId: null,\n        checkedIds: checked ? new Set(allIds) : new Set(),\n      };\n    }\n  }\n};\n\nconst initialState: State = {\n  checkedIds: new Set(),\n  lastCheckedId: null,\n};\n\nexport function useSelectionReducer(allIds: string[]) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const onToggleFactory = (id: string) => (values: {checked: boolean; shiftKey: boolean}) => {\n    const {checked, shiftKey} = values;\n    if (shiftKey && state.lastCheckedId) {\n      dispatch({type: 'toggle-slice', payload: {checked, id, allIds}});\n    } else {\n      dispatch({type: 'toggle-one', payload: {checked, id}});\n    }\n  };\n\n  const onToggleAll = (checked: boolean) => {\n    dispatch({type: 'toggle-all', payload: {checked, allIds}});\n  };\n\n  return [state, {onToggleFactory, onToggleAll}] as const;\n}\n","import {Box, Tag} from '@dagster-io/ui-components';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {useLaunchPadHooks} from '../launchpad/LaunchpadHooksContext';\nimport {TagActionsPopover} from '../ui/TagActions';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {DagsterTag} from './RunTag';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {RunTagsFragment} from './types/RunTable.types';\n\ntype Props = {\n  repoAddress?: RepoAddress | null;\n  tags: RunTagsFragment[];\n  onAddTag?: (token: RunFilterToken) => void;\n};\n\nexport const CreatedByTagCell = React.memo(({repoAddress, tags, onAddTag}: Props) => {\n  return (\n    <Box flex={{direction: 'column', alignItems: 'flex-start'}}>\n      <CreatedByTag repoAddress={repoAddress} tags={tags} onAddTag={onAddTag} />\n    </Box>\n  );\n});\n\ntype TagType =\n  | {\n      type: 'user' | 'schedule' | 'sensor' | 'auto-materialize' | 'auto-observe';\n      tag: RunTagsFragment;\n    }\n  | {type: 'manual'};\n\nconst pluckTagFromList = (tags: RunTagsFragment[]): TagType => {\n  for (const tag of tags) {\n    const {key} = tag;\n    switch (key) {\n      case DagsterTag.User:\n        return {type: 'user', tag};\n      case DagsterTag.ScheduleName:\n        return {type: 'schedule', tag};\n      case DagsterTag.SensorName:\n        return {type: 'sensor', tag};\n      case DagsterTag.Automaterialize:\n        return {type: 'auto-materialize', tag};\n      case DagsterTag.CreatedBy: {\n        // Backwards compatibility\n        if (tag.value === 'auto_materialize') {\n          return {type: 'auto-materialize', tag};\n        } else {\n          continue;\n        }\n      }\n      case DagsterTag.AutoObserve:\n        return {type: 'auto-observe', tag};\n    }\n  }\n\n  return {type: 'manual'};\n};\n\nexport const CreatedByTag = ({repoAddress, tags, onAddTag}: Props) => {\n  const {UserDisplay} = useLaunchPadHooks();\n\n  const plucked = pluckTagFromList(tags);\n\n  if (plucked.type === 'manual') {\n    return <Tag icon=\"account_circle\">Manually launched</Tag>;\n  }\n\n  const buildTagElement = () => {\n    const {type, tag} = plucked;\n    const {value} = tag;\n    switch (type) {\n      case 'user':\n        return <UserDisplay email={tag.value} />;\n      case 'schedule': {\n        return (\n          <Tag icon=\"schedule\">\n            {repoAddress ? (\n              <Link to={workspacePathFromAddress(repoAddress, `/schedules/${value}`)}>{value}</Link>\n            ) : (\n              value\n            )}\n          </Tag>\n        );\n      }\n      case 'sensor': {\n        return (\n          <Tag icon=\"sensors\">\n            {repoAddress ? (\n              <Link to={workspacePathFromAddress(repoAddress, `/sensors/${value}`)}>{value}</Link>\n            ) : (\n              value\n            )}\n          </Tag>\n        );\n      }\n      case 'auto-materialize':\n        return <Tag icon=\"auto_materialize_policy\">Auto-materialize policy</Tag>;\n      case 'auto-observe':\n        return <Tag icon=\"auto_observe\">Auto-observation</Tag>;\n    }\n  };\n\n  const tagElement = buildTagElement();\n  if (!onAddTag) {\n    return tagElement;\n  }\n\n  const {tag} = plucked;\n  const {key, value} = tag;\n  return (\n    <TagActionsPopover\n      data={tag}\n      actions={[\n        {\n          label: 'Add to filter',\n          onClick: () => onAddTag({token: 'tag', value: `${key}=${value}`}),\n        },\n      ]}\n    >\n      {tagElement}\n    </TagActionsPopover>\n  );\n};\n","// eslint-disable-next-line no-restricted-imports\nimport {Placement} from '@blueprintjs/popover2';\nimport React from 'react';\nimport styled, {CSSProperties} from 'styled-components';\n\nimport {CoreColors} from '../palettes/Colors';\n\nimport {Box} from './Box';\nimport {Button} from './Button';\nimport {Popover} from './Popover';\nimport {Subheading} from './Text';\n\nexport enum ProductTourPosition {\n  TOP_LEFT = 'top-start',\n  TOP_CENTER = 'top',\n  TOP_RIGHT = 'top-end',\n  BOTTOM_LEFT = 'bottom-start',\n  BOTTOM_CENTER = 'bottom',\n  BOTTOM_RIGHT = 'bottom-end',\n}\n\ntype ObjectType =\n  | {img: string; video?: undefined; object?: undefined}\n  | {video: string; img?: undefined; object?: undefined}\n  | {object: React.ReactNode; video?: undefined; img?: undefined}\n  | {img?: undefined; video?: undefined; object?: undefined};\n\ntype Props = {\n  children: React.ReactNode;\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  actions?: {\n    next?: () => void;\n    dismiss?: () => void;\n  };\n  position: ProductTourPosition;\n  width?: CSSProperties['width'];\n} & ObjectType;\n\nexport const ProductTour = ({\n  title,\n  description,\n  actions,\n  position,\n  children,\n  img,\n  video,\n  object,\n  width = '260px',\n}: Props) => {\n  const media = React.useMemo(() => {\n    if (img) {\n      return <img src={img} style={{borderRadius: '6px'}} />;\n    }\n    if (video) {\n      return <video src={video} style={{borderRadius: '6px'}} autoPlay loop muted />;\n    }\n    return object;\n  }, [img, video, object]);\n\n  const actionsJsx = React.useMemo(() => {\n    return (\n      <ActionsContainer flex={{gap: 6, direction: 'row'}} margin={{top: 8}}>\n        {actions?.next ? <Button onClick={actions.next}>Next</Button> : null}\n        {actions?.dismiss ? <Button onClick={actions.dismiss}>Dismiss</Button> : null}\n      </ActionsContainer>\n    );\n  }, [actions?.next, actions?.dismiss]);\n\n  return (\n    <Popover\n      isOpen={true}\n      placement={position as Placement}\n      modifiers={{\n        arrow: {enabled: true},\n        preventOverflow: {enabled: true},\n      }}\n      minimal={false}\n      content={\n        <>\n          <div />\n          <ProductTourContainer flex={{direction: 'column', gap: 4}} padding={16} style={{width}}>\n            <Box flex={{direction: 'column', gap: 8}}>\n              {media}\n              <Subheading style={{fontSize: '16px'}}>{title}</Subheading>\n            </Box>\n            <div>{description}</div>\n            {actionsJsx}\n          </ProductTourContainer>\n          <div />\n        </>\n      }\n    >\n      {children}\n    </Popover>\n  );\n};\n\nconst ProductTourContainer = styled(Box)`\n  pointer-events: all;\n  background: ${CoreColors.Gray900};\n  border-radius: 4px;\n  padding: 16px;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.12);\n\n  &,\n  button {\n    &,\n    &:hover,\n    &:focus {\n      color: ${CoreColors.White};\n    }\n  }\n`;\n\nconst ActionsContainer = styled(Box)`\n  > *:not(:first-child) {\n    &,\n    &:hover,\n    &:focus {\n      border: none;\n      box-shadow: none;\n    }\n  }\n  > * {\n    &:hover,\n    &:focus {\n      opacity: 0.9;\n    }\n  }\n`;\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Button,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  Mono,\n  colorAccentGreen,\n  colorAccentYellow,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {ReexecutionStrategy} from '../graphql/types';\n\nimport {NavigationBlock} from './NavigationBlock';\nimport {LAUNCH_PIPELINE_REEXECUTION_MUTATION} from './RunUtils';\nimport {\n  LaunchPipelineReexecutionMutation,\n  LaunchPipelineReexecutionMutationVariables,\n} from './types/RunUtils.types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (reexecutionState: ReexecutionState) => void;\n  selectedRuns: {[id: string]: string};\n  reexecutionStrategy: ReexecutionStrategy;\n}\n\nconst refineToError = (data: LaunchPipelineReexecutionMutation | null | undefined) => {\n  if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n    throw new Error('Not an error!');\n  }\n  return data?.launchPipelineReexecution;\n};\n\ntype Error = ReturnType<typeof refineToError>;\n\nconst errorText = (error: Error) => {\n  if (!error) {\n    return 'Unknown error';\n  }\n  switch (error.__typename) {\n    case 'ConflictingExecutionParamsError':\n      return 'Conflicting execution parameters';\n    case 'InvalidOutputError':\n      return 'Invalid output';\n    case 'InvalidStepError':\n      return 'Invalid step';\n    case 'NoModeProvidedError':\n      return 'No mode provided';\n    case 'PipelineNotFoundError':\n      return 'Job not found in workspace';\n    case 'PresetNotFoundError':\n      return 'Preset not found';\n    case 'PythonError':\n      return error.message;\n    case 'RunConfigValidationInvalid':\n      return 'Run config invalid';\n    case 'RunConflict':\n      return 'Run conflict';\n    case 'UnauthorizedError':\n      return 'Re-execution not authorized';\n    case 'InvalidSubsetError':\n      return 'Invalid op subset: ' + error.message;\n    default:\n      return 'Unknown error';\n  }\n};\n\ntype ReexecutionState = {completed: number; errors: {[id: string]: Error}};\n\ntype ReexecutionDialogState = {\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'reexecuting' | 'completed';\n  reexecution: ReexecutionState;\n};\n\ntype SelectedRuns = {[id: string]: string};\n\nconst initializeState = (selectedRuns: SelectedRuns): ReexecutionDialogState => {\n  return {\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    reexecution: {completed: 0, errors: {}},\n  };\n};\n\ntype ReexecutionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'reexecution-success'}\n  | {type: 'reexecution-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst reexecutionDialogReducer = (\n  prevState: ReexecutionDialogState,\n  action: ReexecutionDialogAction,\n): ReexecutionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'reexecuting'};\n    case 'reexecution-success': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {...reexecution, completed: reexecution.completed + 1},\n      };\n    }\n    case 'reexecution-error': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {\n          ...reexecution,\n          completed: reexecution.completed + 1,\n          errors: {...reexecution.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const ReexecutionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, reexecutionStrategy, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // re-executing. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    reexecutionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [reexecute] = useMutation<\n    LaunchPipelineReexecutionMutation,\n    LaunchPipelineReexecutionMutationVariables\n  >(LAUNCH_PIPELINE_REEXECUTION_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (const runId of runList) {\n      const {data} = await reexecute({\n        variables: {\n          reexecutionParams: {\n            parentRunId: runId,\n            strategy: reexecutionStrategy,\n          },\n        },\n      });\n\n      if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n        dispatch({type: 'reexecution-success'});\n      } else {\n        dispatch({type: 'reexecution-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.reexecution);\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for re-execution.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        const message = () => {\n          if (reexecutionStrategy === ReexecutionStrategy.ALL_STEPS) {\n            return (\n              <span>\n                {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n                <strong>with all steps</strong>. Do you wish to continue?\n              </span>\n            );\n          }\n          return (\n            <span>\n              {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n              <strong>from failure</strong>. Do you wish to continue?\n            </span>\n          );\n        };\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>{message()}</div>\n          </Group>\n        );\n      case 'reexecuting':\n      case 'completed':\n        const value = count > 0 ? state.reexecution.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'reexecuting' ? (\n              <NavigationBlock message=\"Re-execution in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"primary\" onClick={mutate}>\n              {`Re-execute ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n          </>\n        );\n      case 'reexecuting':\n        return (\n          <Button intent=\"primary\" disabled>\n            {`Re-executing ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'reexecuting') {\n      return <div>Please do not close the window or navigate away during re-execution.</div>;\n    }\n\n    const errors = state.reexecution.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.reexecution.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={colorAccentGreen()} />\n            <div>\n              {`Successfully requested re-execution for ${successCount} ${\n                successCount === 1 ? 'run' : `runs`\n              }.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={colorAccentYellow()} />\n              <div>\n                {`Could not request re-execution for ${errorCount} ${\n                  errorCount === 1 ? 'run' : 'runs'\n                }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8} alignItems=\"baseline\">\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errorText(errors[runId])}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'reexecuting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title={\n        reexecutionStrategy === ReexecutionStrategy.ALL_STEPS\n          ? 'Re-execute runs'\n          : 'Re-execute runs from failure'\n      }\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {\n  Button,\n  Icon,\n  MenuDivider,\n  MenuExternalLink,\n  MenuItem,\n  Menu,\n  Popover,\n  Tooltip,\n  DialogFooter,\n  Dialog,\n  JoinedButtons,\n  DialogBody,\n  Box,\n  StyledRawCodeMirror,\n  colorBackgroundLight,\n  colorTextLight,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {AppContext} from '../app/AppContext';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {DEFAULT_DISABLED_REASON} from '../app/Permissions';\nimport {useCopyToClipboard} from '../app/browser';\nimport {ReexecutionStrategy} from '../graphql/types';\nimport {NO_LAUNCH_PERMISSION_MESSAGE} from '../launchpad/LaunchRootExecutionButton';\nimport {getPipelineSnapshotLink} from '../pipelines/PipelinePathUtils';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {MenuLink} from '../ui/MenuLink';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {useRepositoryForRunWithParentSnapshot} from '../workspace/useRepositoryForRun';\nimport {workspacePathFromRunDetails} from '../workspace/workspacePath';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {ReexecutionDialog} from './ReexecutionDialog';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {RunTags} from './RunTags';\nimport {RunsQueryRefetchContext} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {TerminationDialog} from './TerminationDialog';\nimport {\n  PipelineEnvironmentQuery,\n  PipelineEnvironmentQueryVariables,\n} from './types/RunActionsMenu.types';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {useJobAvailabilityErrorForRun} from './useJobAvailabilityErrorForRun';\nimport {useJobReexecution} from './useJobReExecution';\n\ninterface Props {\n  run: RunTableRunFragment;\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  onAddTag?: (token: RunFilterToken) => void;\n}\n\nexport const RunActionsMenu = React.memo(({run, onAddTag, additionalActionsForRun}: Props) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'config' | 'tags'\n  >('none');\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const copyConfig = useCopyToClipboard();\n  const reexecute = useJobReexecution({onCompleted: refetch});\n\n  const [loadEnv, {called, loading, data}] = useLazyQuery<\n    PipelineEnvironmentQuery,\n    PipelineEnvironmentQueryVariables\n  >(PIPELINE_ENVIRONMENT_QUERY, {\n    variables: {runId: run.id},\n  });\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    refetch();\n  };\n\n  const pipelineRun =\n    data?.pipelineRunOrError?.__typename === 'Run' ? data?.pipelineRunOrError : null;\n  const runConfigYaml = pipelineRun?.runConfigYaml;\n\n  const repoMatch = useRepositoryForRunWithParentSnapshot(pipelineRun);\n  const jobError = useJobAvailabilityErrorForRun({\n    ...run,\n    parentPipelineSnapshotId: pipelineRun?.parentPipelineSnapshotId,\n  });\n\n  const isFinished = doneStatuses.has(run.status);\n  const isJob = !!(repoMatch && isThisThingAJob(repoMatch?.match, run.pipelineName));\n\n  const infoReady = called ? !loading : false;\n\n  const reexecutionDisabledState = React.useMemo(() => {\n    if (!run.hasReExecutePermission) {\n      return {disabled: true, message: DEFAULT_DISABLED_REASON};\n    }\n    if (jobError) {\n      return {disabled: jobError.disabled, message: jobError.tooltip};\n    }\n    if (!infoReady) {\n      return {disabled: true};\n    }\n    return {disabled: false};\n  }, [run.hasReExecutePermission, jobError, infoReady]);\n\n  return (\n    <>\n      <JoinedButtons>\n        <AnchorButton to={`/runs/${run.id}`}>View run</AnchorButton>\n        <Popover\n          content={\n            <Menu>\n              <MenuItem\n                tagName=\"button\"\n                style={{minWidth: 200}}\n                text={loading ? 'Loading configuration...' : 'View configuration...'}\n                disabled={!runConfigYaml}\n                icon=\"open_in_new\"\n                onClick={() => setVisibleDialog('config')}\n              />\n              <MenuItem\n                tagName=\"button\"\n                text={\n                  <div style={{display: 'contents'}}>\n                    View all tags\n                    <Box\n                      flex={{\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        display: 'inline-flex',\n                      }}\n                      padding={{horizontal: 8}}\n                    >\n                      <SlashShortcut>t</SlashShortcut>\n                    </Box>\n                  </div>\n                }\n                icon=\"tag\"\n                onClick={() => setVisibleDialog('tags')}\n              />\n\n              {run.pipelineSnapshotId ? (\n                <LinkNoUnderline\n                  to={getPipelineSnapshotLink(run.pipelineName, run.pipelineSnapshotId)}\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"job\"\n                    text=\"View snapshot\"\n                    onClick={() => setVisibleDialog('tags')}\n                  />\n                </LinkNoUnderline>\n              ) : null}\n              <MenuDivider />\n              <>\n                <Tooltip\n                  content={\n                    run.hasReExecutePermission\n                      ? OPEN_LAUNCHPAD_UNKNOWN\n                      : NO_LAUNCH_PERMISSION_MESSAGE\n                  }\n                  position=\"left\"\n                  disabled={infoReady && run.hasReExecutePermission}\n                  targetTagName=\"div\"\n                >\n                  <MenuLink\n                    text=\"Open in Launchpad...\"\n                    disabled={!infoReady || !run.hasReExecutePermission}\n                    icon=\"edit\"\n                    to={workspacePathFromRunDetails({\n                      id: run.id,\n                      pipelineName: run.pipelineName,\n                      repositoryName: repoMatch?.match.repository.name,\n                      repositoryLocationName: repoMatch?.match.repositoryLocation.name,\n                      isJob,\n                    })}\n                  />\n                </Tooltip>\n                <Tooltip\n                  content={reexecutionDisabledState.message || ''}\n                  position=\"left\"\n                  canShow={reexecutionDisabledState.disabled}\n                  targetTagName=\"div\"\n                >\n                  <MenuItem\n                    tagName=\"button\"\n                    text=\"Re-execute\"\n                    disabled={reexecutionDisabledState.disabled}\n                    icon=\"refresh\"\n                    onClick={async () => {\n                      await reexecute(run, ReexecutionStrategy.ALL_STEPS);\n                    }}\n                  />\n                </Tooltip>\n                {isFinished || !run.hasTerminatePermission ? null : (\n                  <MenuItem\n                    tagName=\"button\"\n                    icon=\"cancel\"\n                    text=\"Terminate\"\n                    onClick={() => setVisibleDialog('terminate')}\n                  />\n                )}\n                {additionalActionsForRun?.(run)}\n                <MenuDivider />\n              </>\n              <MenuExternalLink\n                text=\"Download debug file\"\n                icon=\"download_for_offline\"\n                download\n                href={`${rootServerURI}/download_debug/${run.id}`}\n              />\n              {run.hasDeletePermission ? (\n                <MenuItem\n                  tagName=\"button\"\n                  icon=\"delete\"\n                  text=\"Delete\"\n                  intent=\"danger\"\n                  onClick={() => setVisibleDialog('delete')}\n                />\n              ) : null}\n            </Menu>\n          }\n          position=\"bottom-right\"\n          onOpening={() => {\n            if (!called) {\n              loadEnv();\n            }\n          }}\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </JoinedButtons>\n      {run.hasTerminatePermission ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {run.hasDeletePermission ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      <Dialog\n        isOpen={visibleDialog === 'tags'}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <DialogBody>\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n      <Dialog\n        isOpen={visibleDialog === 'config'}\n        title=\"Config\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <StyledRawCodeMirror\n          value={runConfigYaml || ''}\n          options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n        />\n        <DialogFooter topBorder>\n          <Button\n            intent=\"none\"\n            onClick={async () => {\n              copyConfig(runConfigYaml || '');\n              await showSharedToaster({\n                intent: 'success',\n                icon: 'copy_to_clipboard_done',\n                message: 'Copied!',\n              });\n            }}\n          >\n            Copy config\n          </Button>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n});\n\ninterface RunBulkActionsMenuProps {\n  selected: RunTableRunFragment[];\n  clearSelection: () => void;\n}\n\nexport const RunBulkActionsMenu = React.memo((props: RunBulkActionsMenuProps) => {\n  const {selected, clearSelection} = props;\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'reexecute-from-failure' | 'reexecute'\n  >('none');\n\n  const canTerminateAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canDeleteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasTerminatePermission);\n  }, [selected]);\n\n  const canReexecuteAny = React.useMemo(() => {\n    return selected.some((run) => run.hasReExecutePermission);\n  }, [selected]);\n\n  const disabled = !canTerminateAny && !canDeleteAny;\n\n  const terminatableRuns = selected.filter(\n    (r) => !doneStatuses.has(r?.status) && r.hasTerminatePermission,\n  );\n  const terminateableIDs = terminatableRuns.map((r) => r.id);\n  const terminateableMap = terminatableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.canTerminate}),\n    {},\n  );\n\n  const deleteableIDs = selected.map((run) => run.id);\n  const deletionMap = selected.reduce((accum, run) => ({...accum, [run.id]: run.canTerminate}), {});\n\n  const reexecuteFromFailureRuns = selected.filter(\n    (r) => failedStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecuteFromFailureMap = reexecuteFromFailureRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const reexecutableRuns = selected.filter(\n    (r) => doneStatuses.has(r?.status) && r.hasReExecutePermission,\n  );\n  const reexecutableMap = reexecutableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    clearSelection();\n    refetch();\n  };\n\n  return (\n    <>\n      <Popover\n        disabled={disabled || selected.length === 0}\n        content={\n          <Menu>\n            {canTerminateAny ? (\n              <MenuItem\n                icon=\"cancel\"\n                text={`Terminate ${terminateableIDs.length} ${\n                  terminateableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={terminateableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('terminate');\n                }}\n              />\n            ) : null}\n            {canDeleteAny ? (\n              <MenuItem\n                icon=\"delete\"\n                intent=\"danger\"\n                text={`Delete ${deleteableIDs.length} ${\n                  deleteableIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={deleteableIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('delete');\n                }}\n              />\n            ) : null}\n            {canReexecuteAny ? (\n              <>\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecutableRuns.length} ${\n                    reexecutableRuns.length === 1 ? 'run' : 'runs'\n                  }`}\n                  disabled={reexecutableRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute');\n                  }}\n                />\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecuteFromFailureRuns.length} ${\n                    reexecuteFromFailureRuns.length === 1 ? 'run' : 'runs'\n                  } from failure`}\n                  disabled={reexecuteFromFailureRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute-from-failure');\n                  }}\n                />\n              </>\n            ) : null}\n          </Menu>\n        }\n        position=\"bottom-right\"\n      >\n        <Button\n          disabled={disabled || selected.length === 0}\n          rightIcon={<Icon name=\"expand_more\" />}\n          intent=\"primary\"\n        >\n          Actions\n        </Button>\n      </Popover>\n      <TerminationDialog\n        isOpen={visibleDialog === 'terminate'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={terminateableMap}\n      />\n      <DeletionDialog\n        isOpen={visibleDialog === 'delete'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        onTerminateInstead={() => setVisibleDialog('terminate')}\n        selectedRuns={deletionMap}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute-from-failure'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecuteFromFailureMap}\n        reexecutionStrategy={ReexecutionStrategy.FROM_FAILURE}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecutableMap}\n        reexecutionStrategy={ReexecutionStrategy.ALL_STEPS}\n      />\n    </>\n  );\n});\n\nconst OPEN_LAUNCHPAD_UNKNOWN =\n  'Launchpad is unavailable because the pipeline is not present in the current repository.';\n\n// Avoid fetching envYaml and parentPipelineSnapshotId on load in Runs page, they're slow.\nexport const PIPELINE_ENVIRONMENT_QUERY = gql`\n  query PipelineEnvironmentQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        pipelineName\n        pipelineSnapshotId\n        runConfigYaml\n        pipelineName\n        parentPipelineSnapshotId\n        repositoryOrigin {\n          id\n          repositoryName\n          repositoryLocationName\n        }\n      }\n    }\n  }\n`;\n\nconst SlashShortcut = styled.div`\n  border-radius: 4px;\n  padding: 0px 6px;\n  background: ${colorBackgroundLight()};\n  color: ${colorTextLight()};\n`;\n\nconst LinkNoUnderline = styled(Link)`\n  text-decoration: none !important;\n`;\n","import React from 'react';\n\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nimport {DagsterTag} from './RunTag';\n\nexport function useTagPinning() {\n  // Most system tags are unpinned by default so we track pinned for these.\n  const [pinnedSystemTags, setPinnedSystemTags] = useStateWithStorage(\n    'pinned-system-tags',\n    validateIsArray,\n  );\n\n  // All user tags are pinned by default so we track unpinned.\n  const [unpinnedTags, setUnpinnedTags] = useStateWithStorage('unpinned-tags', validateIsArray);\n\n  const onToggleTagPin = React.useCallback(\n    (tagKey: string) => {\n      if (isUnpinnedByDefaultSystemTag(tagKey)) {\n        setPinnedSystemTags((pinnedSystemTags) => toggleTag(pinnedSystemTags, tagKey));\n      } else {\n        setUnpinnedTags((unpinnedTags) => toggleTag(unpinnedTags, tagKey));\n      }\n    },\n    [setUnpinnedTags, setPinnedSystemTags],\n  );\n\n  const isTagPinned = React.useCallback(\n    (tag: {key: string}) => {\n      return isUnpinnedByDefaultSystemTag(tag.key)\n        ? pinnedSystemTags.indexOf(tag.key) !== -1\n        : unpinnedTags.indexOf(tag.key) === -1;\n    },\n    [pinnedSystemTags, unpinnedTags],\n  );\n\n  return {\n    isTagPinned,\n    onToggleTagPin,\n  };\n}\n\nfunction validateIsArray(value: any) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  return [];\n}\n\nfunction isUnpinnedByDefaultSystemTag(key: string) {\n  return (\n    (key.startsWith(DagsterTag.Namespace) &&\n      key !== DagsterTag.Partition &&\n      key !== DagsterTag.Backfill) ||\n    key === 'mode'\n  );\n}\n\nfunction toggleTag(tagsArr: string[] | undefined, tagKey: string): string[] {\n  const tags = tagsArr || [];\n  if (tags.indexOf(tagKey) !== -1) {\n    return tags.filter((key) => key !== tagKey);\n  } else {\n    return [...tags, tagKey];\n  }\n}\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Caption,\n  Checkbox,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Mono,\n  Tag,\n  colorTextLight,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {PipelineTag} from '../graphql/types';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {RepoAddress} from '../workspace/types';\nimport {useRepositoryForRunWithoutSnapshot} from '../workspace/useRepositoryForRun';\n\nimport {AssetCheckTagCollection, AssetKeyTagCollection} from './AssetTagCollections';\nimport {CreatedByTagCell} from './CreatedByTag';\nimport {RunActionsMenu} from './RunActionsMenu';\nimport {RunStatusTagWithStats} from './RunStatusTag';\nimport {DagsterTag, TagType} from './RunTag';\nimport {RunTags} from './RunTags';\nimport {RunStateSummary, RunTime, assetKeysForRun, titleForRun} from './RunUtils';\nimport {RunFilterToken, runsPathWithFilters} from './RunsFilterInput';\nimport {RunTableRunFragment} from './types/RunTable.types';\nimport {useTagPinning} from './useTagPinning';\n\nexport const RunRow = ({\n  run,\n  canTerminateOrDelete,\n  onAddTag,\n  checked,\n  onToggleChecked,\n  additionalColumns,\n  additionalActionsForRun,\n  isHighlighted,\n  hideCreatedBy,\n}: {\n  run: RunTableRunFragment;\n  canTerminateOrDelete: boolean;\n  onAddTag?: (token: RunFilterToken) => void;\n  checked?: boolean;\n  onToggleChecked?: (values: {checked: boolean; shiftKey: boolean}) => void;\n  additionalColumns?: React.ReactNode[];\n  additionalActionsForRun?: (run: RunTableRunFragment) => React.ReactNode[];\n  isHighlighted?: boolean;\n  hideCreatedBy?: boolean;\n}) => {\n  const {pipelineName} = run;\n  const repo = useRepositoryForRunWithoutSnapshot(run);\n  const {isTagPinned, onToggleTagPin} = useTagPinning();\n\n  const isJob = React.useMemo(() => {\n    if (repo) {\n      const pipelinesAndJobs = repo.match.repository.pipelines;\n      const match = pipelinesAndJobs.find((pipelineOrJob) => pipelineOrJob.name === pipelineName);\n      return !!match?.isJob;\n    }\n    return false;\n  }, [repo, pipelineName]);\n\n  const repoAddressGuess = React.useMemo(() => {\n    if (repo) {\n      const {match} = repo;\n      return buildRepoAddress(match.repository.name, match.repositoryLocation.name);\n    }\n    return null;\n  }, [repo]);\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      const {checked} = e.target;\n      const shiftKey =\n        e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n      onToggleChecked && onToggleChecked({checked, shiftKey});\n    }\n  };\n\n  const allTagsWithPinned = React.useMemo(() => {\n    const allTags: Omit<PipelineTag, '__typename'>[] = [...run.tags];\n    if ((isJob && run.mode !== 'default') || !isJob) {\n      allTags.push({key: 'mode', value: run.mode});\n    }\n    return allTags.map((tag) => {\n      return {...tag, pinned: isTagPinned(tag)};\n    });\n  }, [run, isJob, isTagPinned]);\n\n  const isReexecution = run.tags.some((tag) => tag.key === DagsterTag.ParentRunId);\n\n  const [showRunTags, setShowRunTags] = React.useState(false);\n  const [isHovered, setIsHovered] = React.useState(false);\n\n  const tagsToShow = React.useMemo(() => {\n    const targetBackfill = allTagsWithPinned.find((tag) => tag.key === DagsterTag.Backfill);\n    const tagKeys: Set<string> = new Set([]);\n    const tags: TagType[] = [];\n\n    if (targetBackfill && targetBackfill.pinned) {\n      const link = run.assetSelection?.length\n        ? `/overview/backfills/${targetBackfill.value}`\n        : runsPathWithFilters([\n            {\n              token: 'tag',\n              value: `${DagsterTag.Backfill}=${targetBackfill.value}`,\n            },\n          ]);\n      tags.push({\n        ...targetBackfill,\n        link,\n      });\n      tagKeys.add(DagsterTag.Backfill as string);\n    }\n    allTagsWithPinned.forEach((tag) => {\n      if (tagKeys.has(tag.key)) {\n        // We already added this tag\n        return;\n      }\n      if (tag.pinned) {\n        tags.push(tag);\n      }\n    });\n    return tags;\n  }, [allTagsWithPinned, run.assetSelection?.length]);\n\n  return (\n    <Row\n      highlighted={!!isHighlighted}\n      onMouseEnter={() => {\n        setIsHovered(true);\n      }}\n      onMouseLeave={() => {\n        setIsHovered(false);\n      }}\n    >\n      {canTerminateOrDelete ? (\n        <td>{onToggleChecked ? <Checkbox checked={!!checked} onChange={onChange} /> : null}</td>\n      ) : null}\n      <td>\n        <Link to={`/runs/${run.id}`}>\n          <Mono>{titleForRun(run)}</Mono>\n        </Link>\n      </td>\n      <td>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <RunTime run={run} />\n          {isReexecution ? (\n            <div>\n              <Tag icon=\"cached\">Re-execution</Tag>\n            </div>\n          ) : null}\n        </Box>\n      </td>\n      <td style={{position: 'relative'}}>\n        <Box flex={{direction: 'column', gap: 5}}>\n          <RunTargetLink isJob={isJob} run={run} repoAddress={repoAddressGuess} />\n          <Box\n            flex={{direction: 'row', alignItems: 'center', wrap: 'wrap'}}\n            style={{gap: '4px 8px'}}\n          >\n            <RunTagsWrapper>\n              {tagsToShow.length ? (\n                <RunTags tags={tagsToShow} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n              ) : null}\n            </RunTagsWrapper>\n            {allTagsWithPinned.length > tagsToShow.length ? (\n              <Caption>\n                <ButtonLink\n                  onClick={() => {\n                    setShowRunTags(true);\n                  }}\n                  color={colorTextLight()}\n                  style={{margin: '-4px', padding: '4px'}}\n                >\n                  View all tags ({allTagsWithPinned.length})\n                </ButtonLink>\n              </Caption>\n            ) : null}\n          </Box>\n        </Box>\n        {isHovered && allTagsWithPinned.length ? (\n          <ShortcutHandler\n            key=\"runtabletags\"\n            onShortcut={() => {\n              setShowRunTags((showRunTags) => !showRunTags);\n            }}\n            shortcutLabel=\"t\"\n            shortcutFilter={(e) => e.code === 'KeyT'}\n          >\n            {null}\n          </ShortcutHandler>\n        ) : null}\n      </td>\n      {hideCreatedBy ? null : (\n        <td>\n          <CreatedByTagCell\n            repoAddress={repoAddressGuess}\n            tags={run.tags || []}\n            onAddTag={onAddTag}\n          />\n        </td>\n      )}\n      <td>\n        <RunStatusTagWithStats status={run.status} runId={run.id} />\n      </td>\n      <td>\n        <RunStateSummary run={run} />\n      </td>\n      {additionalColumns}\n      <td>\n        <RunActionsMenu\n          run={run}\n          onAddTag={onAddTag}\n          additionalActionsForRun={additionalActionsForRun}\n        />\n      </td>\n      <Dialog\n        isOpen={showRunTags}\n        title=\"Tags\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={() => {\n          setShowRunTags(false);\n        }}\n      >\n        <DialogBody>\n          <RunTags tags={allTagsWithPinned} onAddTag={onAddTag} onToggleTagPin={onToggleTagPin} />\n        </DialogBody>\n        <DialogFooter topBorder>\n          <Button\n            intent=\"primary\"\n            onClick={() => {\n              setShowRunTags(false);\n            }}\n          >\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </Row>\n  );\n};\n\nconst Row = styled.tr<{highlighted: boolean}>`\n  ${({highlighted}) =>\n    highlighted ? `box-shadow: inset 3px 3px #bfccd6, inset -3px -3px #bfccd6;` : null}\n`;\n\nconst RunTagsWrapper = styled.div`\n  display: contents;\n  > * {\n    display: contents;\n  }\n`;\n\nconst RunTargetLink = ({\n  run,\n  isJob,\n  repoAddress,\n}: {\n  isJob: boolean;\n  run: RunTableRunFragment;\n  repoAddress: RepoAddress | null;\n}) => {\n  return isHiddenAssetGroupJob(run.pipelineName) ? (\n    <Box flex={{gap: 16, alignItems: 'end', wrap: 'wrap'}}>\n      <AssetKeyTagCollection assetKeys={assetKeysForRun(run)} />\n      <AssetCheckTagCollection assetChecks={run.assetCheckSelection} />\n    </Box>\n  ) : (\n    <PipelineReference\n      isJob={isJob}\n      showIcon\n      pipelineName={run.pipelineName}\n      pipelineHrefContext={repoAddress || 'repo-unknown'}\n    />\n  );\n};\n","export default \"/_next/static/media/ShowAndHideRunTags.3fa9746ba2f415094d257d3c8e73389d.mp4\";","import {gql} from '@apollo/client';\nimport {\n  Box,\n  Checkbox,\n  Icon,\n  NonIdealState,\n  ProductTour,\n  ProductTourPosition,\n  Table,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {RunsFilter} from '../graphql/types';\nimport {useSelectionReducer} from '../hooks/useSelectionReducer';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\nimport {AnchorButton} from '../ui/AnchorButton';\n\nimport {RunBulkActionsMenu} from './RunActionsMenu';\nimport {RunRow} from './RunRow';\nimport {RUN_TIME_FRAGMENT} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport ShowAndHideTagsMP4 from './ShowAndHideRunTags.mp4';\nimport {RunTableRunFragment} from './types/RunTable.types';\n\ninterface RunTableProps {\n  runs: RunTableRunFragment[];\n  filter?: RunsFilter;\n  onAddTag?: (token: RunFilterToken) => void;\n  actionBarComponents?: React.ReactNode;\n  highlightedIds?: string[];\n  additionalColumnHeaders?: React.ReactNode[];\n  additionalColumnsForRow?: (run: RunTableRunFragment) => React.ReactNode[];\n  belowActionBarComponents?: React.ReactNode;\n  hideCreatedBy?: boolean;\n  additionalActionsForRun?: (run: RunTableRunFragment) => JSX.Element[];\n  emptyState?: () => React.ReactNode;\n}\n\nexport const RunTable = (props: RunTableProps) => {\n  const {\n    runs,\n    filter,\n    onAddTag,\n    highlightedIds,\n    actionBarComponents,\n    belowActionBarComponents,\n    hideCreatedBy,\n    emptyState,\n  } = props;\n  const allIds = runs.map((r) => r.id);\n\n  const [{checkedIds}, {onToggleFactory, onToggleAll}] = useSelectionReducer(allIds);\n\n  const canTerminateOrDeleteAny = React.useMemo(() => {\n    return runs.some((run) => run.hasTerminatePermission || run.hasDeletePermission);\n  }, [runs]);\n\n  function content() {\n    if (runs.length === 0) {\n      const anyFilter = !!Object.keys(filter || {}).length;\n      if (emptyState) {\n        return <>{emptyState()}</>;\n      }\n\n      return (\n        <div>\n          <Box margin={{vertical: 32}}>\n            {anyFilter ? (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No matching runs\"\n                description=\"No runs were found for this filter.\"\n              />\n            ) : (\n              <NonIdealState\n                icon=\"run\"\n                title=\"No runs found\"\n                description={\n                  <Box flex={{direction: 'column', gap: 12}}>\n                    <div>You have not launched any runs yet.</div>\n                    <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n                      <AnchorButton icon={<Icon name=\"add_circle\" />} to=\"/overview/jobs\">\n                        Launch a run\n                      </AnchorButton>\n                      <span>or</span>\n                      <AnchorButton icon={<Icon name=\"materialization\" />} to=\"/asset-groups\">\n                        Materialize an asset\n                      </AnchorButton>\n                    </Box>\n                  </Box>\n                }\n              />\n            )}\n          </Box>\n        </div>\n      );\n    } else {\n      return (\n        <Table>\n          <thead>\n            <tr>\n              {canTerminateOrDeleteAny ? (\n                <th style={{width: 42, paddingTop: 0, paddingBottom: 0}}>\n                  <Checkbox\n                    indeterminate={checkedIds.size > 0 && checkedIds.size !== runs.length}\n                    checked={checkedIds.size === runs.length}\n                    onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                      if (e.target instanceof HTMLInputElement) {\n                        onToggleAll(e.target.checked);\n                      }\n                    }}\n                  />\n                </th>\n              ) : null}\n              <th style={{width: 90}}>Run ID</th>\n              <th style={{width: 180}}>Created date</th>\n              <th>\n                <TargetHeader />\n              </th>\n              {hideCreatedBy ? null : <th style={{width: 160}}>Launched by</th>}\n              <th style={{width: 120}}>Status</th>\n              <th style={{width: 190}}>Duration</th>\n              {props.additionalColumnHeaders}\n              <th style={{width: 52}} />\n            </tr>\n          </thead>\n          <tbody>\n            {runs.map((run) => (\n              <RunRow\n                canTerminateOrDelete={run.hasTerminatePermission || run.hasDeletePermission}\n                run={run}\n                key={run.id}\n                onAddTag={onAddTag}\n                checked={checkedIds.has(run.id)}\n                additionalColumns={props.additionalColumnsForRow?.(run)}\n                additionalActionsForRun={props.additionalActionsForRun}\n                onToggleChecked={onToggleFactory(run.id)}\n                isHighlighted={highlightedIds && highlightedIds.includes(run.id)}\n                hideCreatedBy={hideCreatedBy}\n              />\n            ))}\n          </tbody>\n        </Table>\n      );\n    }\n  }\n\n  const selectedFragments = runs.filter((run) => checkedIds.has(run.id));\n\n  return (\n    <>\n      <ActionBar\n        top={\n          <Box\n            flex={{\n              direction: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              grow: 1,\n            }}\n          >\n            {actionBarComponents}\n            <RunBulkActionsMenu\n              selected={selectedFragments}\n              clearSelection={() => onToggleAll(false)}\n            />\n          </Box>\n        }\n        bottom={belowActionBarComponents}\n      />\n      {content()}\n    </>\n  );\n};\n\nexport const RUN_TAGS_FRAGMENT = gql`\n  fragment RunTagsFragment on PipelineTag {\n    key\n    value\n  }\n`;\n\nexport const RUN_TABLE_RUN_FRAGMENT = gql`\n  fragment RunTableRunFragment on Run {\n    id\n    status\n    stepKeysToExecute\n    canTerminate\n    hasReExecutePermission\n    hasTerminatePermission\n    hasDeletePermission\n    mode\n    rootRunId\n    parentRunId\n    pipelineSnapshotId\n    pipelineName\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    assetCheckSelection {\n      name\n      assetKey {\n        path\n      }\n    }\n    status\n    tags {\n      ...RunTagsFragment\n    }\n    ...RunTimeFragment\n  }\n\n  ${RUN_TIME_FRAGMENT}\n  ${RUN_TAGS_FRAGMENT}\n`;\n\nfunction ActionBar({top, bottom}: {top: React.ReactNode; bottom?: React.ReactNode}) {\n  return (\n    <Box flex={{direction: 'column'}} padding={{vertical: 12}}>\n      <Box flex={{alignItems: 'center', gap: 12}} padding={{left: 24, right: 12}}>\n        {top}\n      </Box>\n      {bottom ? (\n        <Box\n          margin={{top: 12}}\n          padding={{left: 24, right: 12, top: 8}}\n          border=\"top\"\n          flex={{gap: 8, wrap: 'wrap'}}\n        >\n          {bottom}\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nfunction TargetHeader() {\n  const [hideTabPinningNux, setHideTabPinningNux] = useStateWithStorage<any>(\n    'RunTableTabPinningNux',\n    (value) => value,\n  );\n  if (hideTabPinningNux) {\n    return <div>Target</div>;\n  }\n  return (\n    <ProductTour\n      title=\"Hide and show run tags\"\n      description={\n        <>\n          You can show tags that you prefer quick access to and hide tags you don&apos;t by hovering\n          over the tag and selecting the show/hide tag option.\n        </>\n      }\n      position={ProductTourPosition.BOTTOM_RIGHT}\n      video={ShowAndHideTagsMP4}\n      width=\"616px\"\n      actions={{\n        dismiss: () => {\n          setHideTabPinningNux('1');\n        },\n      }}\n    >\n      <div>Target</div>\n    </ProductTour>\n  );\n}\n","import {useQuery} from '@apollo/client';\nimport {CursorPaginationProps} from '@dagster-io/ui-components';\nimport {DocumentNode} from 'graphql';\nimport * as React from 'react';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\n\ninterface CursorPaginationQueryVariables {\n  cursor?: string | null;\n  limit?: number | null;\n}\n\n/**\n * This is a React hook that makes it easier to build paginated list views based on a GraphQL\n * query. It is intended to be used in place of Apollo's `useQuery` and assumes that the query\n * takes at least `cursor` and `limit` variables. It manages those two variables internally,\n * and you can pass additional variables via the options.\n *\n * The current pagination \"cursor\" is saved to the URL query string, which allows the user to\n * navigate \"back\" in their browser history to move to previous pages.\n *\n * The returned paginationProps expose methods for moving to the next / previous page and are\n * used by <CursorPaginationControls /> to render the pagination buttons.\n */\nexport function useCursorPaginatedQuery<T, TVars extends CursorPaginationQueryVariables>(options: {\n  query: DocumentNode;\n  nextCursorForResult: (result: T) => string | undefined;\n  skip?: boolean;\n  variables: Omit<TVars, 'cursor' | 'limit'>;\n  pageSize: number;\n  getResultArray: (result: T | undefined) => any[];\n}) {\n  const [cursorStack, setCursorStack] = React.useState<string[]>(() => []);\n  const [cursor, setCursor] = useQueryPersistedState<string | undefined>({queryKey: 'cursor'});\n\n  const queryVars: any = {\n    ...options.variables,\n    cursor,\n    limit: options.pageSize + 1,\n  };\n\n  const queryResult = useQuery<T, TVars>(options.query, {\n    skip: options.skip,\n    variables: queryVars,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const resultArray = options.getResultArray(queryResult.data);\n  const paginationProps: CursorPaginationProps = {\n    hasPrevCursor: !!cursor,\n    hasNextCursor: resultArray.length === options.pageSize + 1,\n    popCursor: () => {\n      const nextStack = [...cursorStack];\n      setCursor(nextStack.pop());\n      setCursorStack(nextStack);\n    },\n    advanceCursor: () => {\n      if (cursor) {\n        setCursorStack((current) => [...current, cursor]);\n      }\n      const nextCursor = queryResult.data && options.nextCursorForResult(queryResult.data);\n      if (!nextCursor) {\n        return;\n      }\n      setCursor(nextCursor);\n    },\n    reset: () => {\n      setCursorStack([]);\n      setCursor(undefined);\n    },\n  };\n\n  return {queryResult, paginationProps};\n}\n","// eslint-disable-next-line no-restricted-imports\nimport {\n  Box,\n  CommonMenuItemProps,\n  IconWrapper,\n  iconWithColor,\n  MenuItem,\n  colorTextDefault,\n  colorBackgroundLighter,\n  colorFocusRing,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface MenuLinkProps\n  extends CommonMenuItemProps,\n    Omit<React.ComponentProps<typeof MenuItem>, 'icon' | 'onClick' | 'onFocus' | 'target'>,\n    LinkProps {}\n\n/**\n * If you want to use a menu item as a link, use `MenuLink` and provide a `to` prop.\n */\nexport const MenuLink = (props: MenuLinkProps) => {\n  const {icon, intent, text, disabled, ...rest} = props;\n\n  if (disabled) {\n    return <MenuItem disabled icon={icon} intent={intent} text={text} />;\n  }\n  return (\n    <StyledMenuLink {...rest}>\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n        {iconWithColor(icon, intent)}\n        <div>{text}</div>\n      </Box>\n    </StyledMenuLink>\n  );\n};\n\nconst StyledMenuLink = styled(Link)`\n  text-decoration: none;\n\n  border-radius: 4px;\n  display: block;\n  line-height: 20px;\n  padding: 6px 8px 6px 12px;\n  transition:\n    background-color 50ms,\n    box-shadow 150ms;\n  align-items: flex-start;\n  user-select: none;\n\n  /**\n   * Use margin instead of align-items: center because the contents of the menu item may wrap \n   * in unusual circumstances.\n   */\n  ${IconWrapper} {\n    margin-top: 2px;\n  }\n\n  ${IconWrapper}:first-child {\n    margin-left: -4px;\n  }\n\n  &&&:link,\n  &&&:visited,\n  &&&:hover,\n  &&&:active {\n    color: ${colorTextDefault()};\n    text-decoration: none;\n  }\n\n  &&&:hover {\n    background: ${colorBackgroundLighter()};\n  }\n\n  &:focus {\n    box-shadow: ${colorFocusRing()} 0 0 0 2px;\n    outline: none;\n  }\n`;\n","import {colorBackgroundDefault, colorKeylineDefault} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\ninterface Props {\n  $top?: number;\n}\n\n/**\n * Wrap a `Table` component with this to cause its `thead` to be sticky while scrolling.\n *\n * `$top` is the pixel value of the point in the scrolling container that the `thead`\n * should stick to. Probably `0`.\n */\nexport const StickyTableContainer = styled.div<Props>`\n  thead tr {\n    position: sticky;\n    top: ${({$top = 0}) => $top}px;\n    background-color: ${colorBackgroundDefault()};\n    z-index: 1;\n  }\n\n  /**\n   * Safari won't render a box-shadow on the \\`tr\\` and we don't want an inset\n   * box-shadow on \\`th\\` elements because it will create a double-border on the\n   * bottom of the \\`thead\\` in the non-stuck state.\n   *\n   * We therefore render an absoulutely-positioned keyline on the bottom of the\n   * \\`th\\` elements. This will appear as a border in the stuck state, and will\n   * overlap the top box-shadow of the first row in the non-stuck state.\n   */\n  thead tr th {\n    position: relative;\n  }\n\n  thead tr th::after {\n    content: '';\n    display: block;\n    height: 1px;\n    background-color: ${colorKeylineDefault()};\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n  }\n`;\n"],"names":["reducer","state","action","copy","Set","Array","from","checkedIds","type","payload","checked","id","add","delete","lastCheckedId","allIds","indexOfLast","indexOf","indexOfChecked","_sort","_swc_helpers_sliced_to_array__WEBPACK_IMPORTED_MODULE_1__","_","sort","start","end","slice","forEach","initialState","useSelectionReducer","React","dispatch","onToggleFactory","values","shiftKey","onToggleAll","CreatedByTagCell","param","repoAddress","tags","onAddTag","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Box","flex","direction","alignItems","CreatedByTag","pluckTagFromList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","tag","value","key","DagsterTag","User","ScheduleName","SensorName","Automaterialize","CreatedBy","AutoObserve","err","return","UserDisplay","useLaunchPadHooks","plucked","Tag","icon","tagElement","buildTagElement","email","Link","to","workspacePathFromAddress","concat","TagActionsPopover","data","actions","label","onClick","token","ProductTourPosition","ProductTour","title","description","position","children","img","video","object","width","media","jsx_runtime","src","style","borderRadius","autoPlay","loop","muted","actionsJsx","jsxs","ActionsContainer","gap","margin","top","Button","dismiss","Popover","isOpen","placement","modifiers","arrow","enabled","preventOverflow","minimal","content","Fragment","div","ProductTourContainer","padding","_param_width","Subheading","fontSize","styled","CoreColors","Gray900","White","refineToError","launchPipelineReexecution","__typename","errorText","error","message","initializeState","selectedRuns","frozenRuns","step","reexecution","completed","errors","reexecutionDialogReducer","prevState","_object_spread_props","_object_spread","reexecution1","_define_property","ReexecutionDialog","props","onClose","onComplete","reexecutionStrategy","current","count","Object","keys","length","reexecute","useMutation","LAUNCH_PIPELINE_REEXECUTION_MUTATION","mutate","_async_to_generator","runList","runId","variables","reexecutionParams","parentRunId","strategy","_state","sent","canQuicklyClose","Dialog","ReexecutionStrategy","ALL_STEPS","canEscapeKeyClose","canOutsideClickClose","DialogBody","Group","spacing","progressContent","span","strong","ProgressBar","intent","Math","max","animate","NavigationBlock","completionContent","errorCount","successCount","Icon","name","color","colorAccentGreen","colorAccentYellow","ul","map","li","Mono","DialogFooter","buttons","disabled","RunActionsMenu","run","additionalActionsForRun","refetch","RunsQueryRefetchContext","visibleDialog","setVisibleDialog","rootServerURI","AppContext","copyConfig","useCopyToClipboard","useJobReexecution","onCompleted","useLazyQuery","PIPELINE_ENVIRONMENT_QUERY","loadEnv","called","loading","closeDialogs","pipelineRun","pipelineRunOrError","runConfigYaml","repoMatch","useRepositoryForRunWithParentSnapshot","jobError","useJobAvailabilityErrorForRun","parentPipelineSnapshotId","isFinished","doneStatuses","has","status","isJob","isThisThingAJob","match","pipelineName","infoReady","reexecutionDisabledState","hasReExecutePermission","tooltip","DEFAULT_DISABLED_REASON","JoinedButtons","AnchorButton","Menu","MenuItem","tagName","minWidth","text","display","justifyContent","horizontal","SlashShortcut","pipelineSnapshotId","LinkNoUnderline","getPipelineSnapshotLink","MenuDivider","Tooltip","OPEN_LAUNCHPAD_UNKNOWN","NO_LAUNCH_PERMISSION_MESSAGE","targetTagName","MenuLink","workspacePathFromRunDetails","repositoryName","repository","repositoryLocationName","repositoryLocation","canShow","hasTerminatePermission","MenuExternalLink","download","href","hasDeletePermission","onOpening","TerminationDialog","canTerminate","DeletionDialog","onTerminateInstead","RunTags","mode","topBorder","StyledRawCodeMirror","options","readOnly","lineNumbers","showSharedToaster","RunBulkActionsMenu","selected","clearSelection","canTerminateAny","some","canDeleteAny","canReexecuteAny","terminatableRuns","filter","r","terminateableIDs","terminateableMap","reduce","accum","deleteableIDs","deletionMap","reexecuteFromFailureRuns","failedStatuses","reexecuteFromFailureMap","reexecutableRuns","reexecutableMap","rightIcon","FROM_FAILURE","gql","withConfig","colorBackgroundLight","colorTextLight","validateIsArray","isArray","isUnpinnedByDefaultSystemTag","startsWith","Namespace","Partition","Backfill","toggleTag","tagsArr","tagKey","_to_consumable_array","RunRow","useStateWithStorage","pinnedSystemTags","setPinnedSystemTags","unpinnedTags","setUnpinnedTags","onToggleTagPin","canTerminateOrDelete","onToggleChecked","additionalColumns","isHighlighted","hideCreatedBy","repo","useRepositoryForRunWithoutSnapshot","useTagPinning","isTagPinned","pipelinesAndJobs","pipelines","find","pipelineOrJob","repoAddressGuess","buildRepoAddress","allTagsWithPinned","allTags","push","pinned","isReexecution","ParentRunId","showRunTags","setShowRunTags","isHovered","setIsHovered","tagsToShow","targetBackfill","tagKeys","link","assetSelection","runsPathWithFilters","Row","highlighted","onMouseEnter","onMouseLeave","td","Checkbox","onChange","e","target","HTMLInputElement","nativeEvent","MouseEvent","getModifierState","titleForRun","RunTime","RunTargetLink","wrap","RunTagsWrapper","Caption","ButtonLink","ShortcutHandler","onShortcut","shortcutLabel","shortcutFilter","code","RunStatusTagWithStats","RunStateSummary","tr","isHiddenAssetGroupJob","AssetKeyTagCollection","assetKeys","assetKeysForRun","AssetCheckTagCollection","assetChecks","assetCheckSelection","PipelineReference","showIcon","pipelineHrefContext","RunTable","runs","highlightedIds","actionBarComponents","belowActionBarComponents","emptyState","canTerminateOrDeleteAny","selectedFragments","ActionBar","grow","bottom","Table","thead","th","paddingTop","paddingBottom","indeterminate","size","TargetHeader","additionalColumnHeaders","tbody","additionalColumnsForRow","includes","anyFilter","vertical","NonIdealState","RUN_TAGS_FRAGMENT","RUN_TABLE_RUN_FRAGMENT","RUN_TIME_FRAGMENT","left","right","border","hideTabPinningNux","setHideTabPinningNux","BOTTOM_RIGHT","useCursorPaginatedQuery","cursorStack","setCursorStack","useQueryPersistedState","queryKey","cursor","setCursor","queryVars","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_3__","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_4__","limit","pageSize","queryResult","useQuery","query","skip","notifyOnNetworkStatusChange","paginationProps","hasPrevCursor","hasNextCursor","resultArray","getResultArray","popCursor","nextStack","_swc_helpers_to_consumable_array__WEBPACK_IMPORTED_MODULE_6__","pop","advanceCursor","nextCursor","nextCursorForResult","reset","rest","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","StyledMenuLink","iconWithColor","IconWrapper","colorTextDefault","colorBackgroundLighter","colorFocusRing","StickyTableContainer","$top","_param_$top","colorBackgroundDefault","colorKeylineDefault"],"sourceRoot":""}